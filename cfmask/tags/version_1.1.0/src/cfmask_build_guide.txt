Fmask in C 1.0.1 Release Note:

Installation:

1. Install dependent libraries - HDF4 and OpenCV

2. Set up environment variables. Can create an environment shell file or add 
   the following to your bash shell. For C shell, use 'setenv VAR "directory"
    export HDFINC="path_to_HDF_include_files"
    export HDFLIB="path_to_HDF_libraries"
    export HDFEOS_INC="path_to_HDFEOS_include_files"
    export HDFEOS_LIB="path_to_HDFEOS_libraries"
    export HDFEOS_GCTPINC="path_to_HDFEOS_GCTP_include_files"
    export HDFEOS_GCTPLIB="path_to_HDFEOS_GCTP_libraries"
    export OPENCVINC="path_to_OpenCV_include_files"
    export OPENCVLIB="path_to_OpenCV_libraries"
    export ESUN="path_to_EarthSunDistance.txt_file"
Note: ESUN environment variable is needed to indicate the EarthSunDistance.txt
      file location.

3. Check out code from: svn://l8srlscp01.cr.usgs.gov/espa/fmask/trunk

4. usage: fmask --metadata=input_metadata_filename_with_full_path --prob=input_cloud_probability_value --cldpix=input_cloud_pixel_buffer --sdpix=input_shadow_pixel_buffer [--write_binary] [--verbose]

where the following parameters are required:
    -metadata: name of the input metadata file (full path) output from LEDAPS

where the following parameters are optional:
    -prob: cloud_probability, default value is 22.5
    -cldpix: cloud_pixel_buffer for image dilate, default value is 3
    -sdpix: shadow_pixel_buffer for image dilate, default value is 3
    -write_binary: should raw binary outputs and ENVI header files be written in addition to the HDF file? (default is false)
    -no_hdf_out: should Fmask not output as HDF file? (default is false)    
    -verbose: should intermediate messages be printed? (default is false)

fmask --help will print the usage statement

Example: fmask --metadata= --metadata=/home/sguo/LEDAPS/ledaps-read-only/ledapsSrc/src/fmask2/L5010054_05420110312.metadata.txt --prob=22.5 --cldpix=3 --sdpix=3 --write_binary --verbose

5. Dependencies
   HDF4 libraries
   OpenCV libraries
   Puthon 2.7 and associated Scipy 

6. Associated use of newly updated ESUN, K1/K2 and earth_sun_distance in
the digital number (DN) to TOA reflectance and brightness temperature (BT)
conversion in the LEDAPS lndcal code.

- If new constant values are needed in the DN to TOA reflectance and BT 
conversion, then the updated new lndcal code can be checked out from:
svn co svn://l8srlscp01.cr.usgs.gov/espa/fmask/lndcal2 (Note: An ESUN
environment variable needs to be set to indicate location of the
EarthSunDistance.txt file).

- If the new lndcal needs to be run, just run the original LEDAPS lndpm first,
and then run lndcal the second, all the needed input files to Fmask will be
generated.

- Now in the standard LEDAPS code, the saturated pixel values are set to be 
20000 for all bands. 20000 is saved for all satu_value_ref values for each band.
Now in the Fmask, the satu_value_max is calculated based on the same DN to TOA
reflectance and DN to BT conversions when DN is 255. In Fmask, when any pixel 
value is 20000, it is replaced with the satu_value_max of the band calculated 
as above. Therefore, the actual satu_value_max values are used for each 
saturated pixle instead of 20000 in Fmask. The lndcal2 code above actually set
saturated pixel values as satu_value_max values calculated above. Then the 
saturated pixel value replacement may not be needed in Fmask code, but it 
doesn't hurt to keep the replacement code in Fmask as it will simply do nothing
if the equivalent saturated TOA reflectance and BT values are saved in LEDAPS
output files (therefore the input files for Fmask) instead of 20000 is saved. 
Our long-term goal is simply use LEDAPS output files as inputs to the Fmask 
after all constant updates are taken in place.  
